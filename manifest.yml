name: Vapor Template
variables:
  - name: name
    description: What would you like to name your app?
    type: string
    default: VaporApp
  - name: fluent
    description: Would you like to use Fluent?
    type: nested
    variables:
      - name: db
        description: Which database would you like to use?
        type: option
        options:
          - name: Postgres
            description: Recommended. Open source, standards compliant SQL database. Available on most cloud hosting providers.
            data:
              module: Postgres
              url: postgres
              id: psql
              version: "2.0.0"
              extend: "dbs.postgres(config: c.make())"
              configType: PostgresConfiguration
              configInit: '.init(hostname: "vapor", username: "vapor", password: "vapor")'
          - name: MySQL
            description: Popular open source SQL database. Available on most cloud hosting providers. This driver also supports MariaDB.
            data:
              module: MySQL
              url: mysql
              id: mysql
              version: "4.0.0"
              extend: "dbs.mysql(config: c.make())"
              configType: MySQLConfiguration
              configInit: '.init(hostname: "vapor", username: "vapor", password: "vapor")'
          - name: SQLite
            description: Open source, embedded SQL database. Its simplistic nature makes it a great candiate for prototyping and testing.
            data: 
              module: SQLite
              url: sqlite
              id: sqlite
              version: "4.0.0"
              extend: "dbs.sqlite(configuration: c.make(), threadPool: c.make())"
              configType: SQLiteConfiguration
              configInit: '.init(hostname: "vapor", username: "vapor", password: "vapor")'
files:
  - file: Package.swift
    dynamic: true
  - folder: Sources
    files:
      - folder: Run
        files:
          - main.swift
      - folder: App
        files:
          - app.swift
          - boot.swift
          - file: configure.swift
            dynamic: true
          - file: routes.swift
            dynamic: true
          - folder: Models
            if: fluent
            files: 
              - Todo.swift
          - folder: Migrations
            if: fluent
            files: 
              - CreateTodo.swift
          - folder: Controllers
            files: 
              - .gitkeep
              - file: TodoController.swift
                if: fluent
  - folder: Tests
    files: 
      - LinuxMain.swift
      - folder: AppTests
        files: 
          - AppTests.swift
          - XCTestManifests.swift
  - web.Dockerfile
